spring:
  application:
    name: Discodeit
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 500MB
      enabled: true
  datasource:
    url: jdbc:h2:mem:testdb;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password:
    driver-class-name: org.h2.Driver

  jpa:
    #    database-platform: org.hibernate.dialect.PostgreSQLDialect
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        default_batch_fetch_size: 1000
        jdbc:
          time_zone: UTC
      type_descriptor:
        sql_uuid: true
    open-in-view: false

  h2:
    console:
      enabled: true
      path: /h2-console

logging:
  level:
    root: info
    org.hibernate.SQL: debug
    org.hibernate.type.descriptor.sql: trace
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.engine.jdbc.spi.SqlExceptionHelper: DEBUG
    com.discodeit: debug

decorator:
  datasource:
    p6spy:
      enable-logging: true

discodeit:
  repository:
    type: file  # jcf or file
    file-directory: .discodeit
  storage:
    type: local
    local:
      root-path: ${STORAGE_LOCAL_ROOT_PATH:.discodeit/storage}
    s3:
      access-key: test
      secret-key: test
      region: test
      bucket: test
      presigned-url-expiration: ${AWS_S3_PRESIGNED_URL_EXPIRATION:600} # (기본값: 10분)

file:
  dir: ${java.io.tmpdir}/discodeit-test/uploads/

server:
  port: 0  # 랜덤 포트 사용 (테스트 시 포트 충돌 방지)